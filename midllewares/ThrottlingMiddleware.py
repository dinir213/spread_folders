import time

from aiogram.dispatcher.middlewares import BaseMiddleware
from aiogram.dispatcher.handler import CancelHandler, current_handler
from aiogram import types
from aiogram.types import CallbackQuery
from data_base.admin_db import get_work_mode_db
from create_bot import admin_id
class ThrottlingMiddleware(BaseMiddleware):
    def __init__(self, limit: int = 5):
        BaseMiddleware.__init__(self)
        self.rate_limit = limit
    async def on_process_message(self, msg: types.Message, data: dict):
        work_mode = await get_work_mode_db()
        if work_mode == 0:
            if msg.from_user.id != admin_id:
                await msg.reply('–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –±–æ—Ç–∞ –∏–¥—É—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã, –º—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–∫–æ—Ä–æ –≤–µ—Ä–Ω–µ–º—Å—è üòâ')
                raise CancelHandler()
            else:
                await msg.reply(f'–ë–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≤—ã–∫–ª—é—á–µ–Ω–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫—Ä–æ–º–µ <i>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ {msg.from_user.first_name}</i> üòä', parse_mode='html')
    async def on_process_callback_query(self, call: CallbackQuery, data: dict):
        timestart = time.time_ns()
        work_mode = await get_work_mode_db()
        if work_mode == 0:
            if call.from_user.id != admin_id:
                try:
                    await call.message.edit_caption('–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –±–æ—Ç–∞ –∏–¥—É—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã, –º—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–∫–æ—Ä–æ –≤–µ—Ä–Ω–µ–º—Å—è üòâ')
                except:
                    await call.message.edit_text('–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –±–æ—Ç–∞ –∏–¥—É—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã, –º—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–∫–æ—Ä–æ –≤–µ—Ä–Ω–µ–º—Å—è üòâ')
                print("–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –º–∏–¥–¥–ª–≤–∞—Ä—è:", time.time_ns() - timestart)
                raise CancelHandler()
            else:
                await call.answer(f'–ë–æ—Ç –¥–ª—è –¥—Ä—É–≥–∏—Ö –≤—ã–∫–ª—é—á–µ–Ω üòä')
        print("–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –º–∏–¥–¥–ª–≤–∞—Ä—è:", time.time_ns() - timestart)