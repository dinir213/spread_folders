from data_base.admin_db import get_work_mode_db, update_work_mode_db
from keyboards.admin_kb import markup_work_mode
from aiogram import Dispatcher, types
async def update_work_mode(call: types.CallbackQuery):
    work_mode = await get_work_mode_db()
    markup = await markup_work_mode(work_mode)
    await call.message.edit_text(f'–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞ –¥–ª—è –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫—Ä–æ–º–µ –í–∞—Å (—á—Ç–æ–±—ã –≤—ã–ª–æ–∂–∏—Ç—å –≤—Å–µ —Ç–æ–≤–∞—Ä—ã, –∫ –ø—Ä–∏–º–µ—Ä—É).\n\n–ß—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å - –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É üëá', reply_markup=markup)
    # if work_mode == 1:
    #     await call.message.edit_text(f'–ë–æ—Ç —Å–µ–π—á–∞—Å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤–æ –≤–∫–ª—é—á–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ. –ß—Ç–æ–±—ã –≤—ã–∫–ª—é—á–∏—Ç—å - –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É üëá', reply_markup=markup)
    # elif work_mode == 0:
    #     await call.message.edit_text(f'–ë–æ—Ç —Å–µ–π—á–∞—Å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≤—ã–∫–ª—é—á–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ. –ß—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å - –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É üëá', reply_markup=markup)

async def update_work_mode_click(call: types.CallbackQuery):
    work_mode = await get_work_mode_db()
    print('click')

    if work_mode == 0:
        print('–ü–æ–º–µ–Ω—è–ª–∏ ')
        await update_work_mode_db(1)
        markup = await markup_work_mode(1)
    elif work_mode == 1:
        await update_work_mode_db(0)
        markup = await markup_work_mode(0)
    await call.message.edit_reply_markup(markup)

    # await update_work_mode(call)


def register_handlers_client(dp: Dispatcher):
    dp.register_callback_query_handler(update_work_mode, text=["update_work_mode"])
    dp.register_callback_query_handler(update_work_mode_click, text=["click_update_work_mode"])